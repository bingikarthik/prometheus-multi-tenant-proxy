# Example configuration for Prometheus Multi-Tenant Proxy
# This configuration is suitable for development and testing

# Service Discovery Configuration
discovery:
  kubernetes:
    # Namespaces to watch for Prometheus services
    namespaces:
      - monitoring
      - default
    
    # Label selectors for discovering Prometheus services
    label_selectors:
      app: prometheus
    
    # Optional: Annotation selectors for additional filtering
    annotation_selectors:
      prometheus.io/scrape: "true"
    
    # Port name or number to use for Prometheus services
    port: "9090"
    
    # Resource types to discover
    resource_types:
      - Service
      - Pod
  
  # How often to refresh the list of targets
  refresh_interval: 30s

# Tenant Management Configuration
tenants:
  # Watch all namespaces for MetricAccess resources
  watch_all_namespaces: true

# Remote Write Configuration
remote_write:
  # Enable remote write controller
  enabled: true
  
  # Default collection interval for remote write jobs
  default_interval: 30s
  
  # Maximum number of concurrent remote write jobs
  max_concurrent_jobs: 10

# Proxy Configuration
proxy:
  # Enable query result caching
  enable_caching: true
  cache_ttl: 5m
  
  # Enable Prometheus metrics collection
  enable_metrics: true
  
  # Enable request logging
  enable_request_logging: true
  
  # Maximum concurrent requests to backends
  max_concurrent_requests: 100
  
  # Timeout for backend requests
  backend_timeout: 30s

# Authentication is disabled for development
# Uncomment and configure for production use
# auth:
#   type: "none" 