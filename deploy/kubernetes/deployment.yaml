apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-multi-tenant-proxy
  namespace: monitoring
  labels:
    app: prometheus-multi-tenant-proxy
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: prometheus-multi-tenant-proxy
  template:
    metadata:
      labels:
        app: prometheus-multi-tenant-proxy
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: prometheus-multi-tenant-proxy
      containers:
      - name: proxy
        image: bnkarthik6/prometheus-multi-tenant-proxy:latest
        imagePullPolicy: Always
        args:
        - "--log-level=debug"
        - "--port=8080"
        - "--config=/etc/prometheus-proxy/config.yaml"
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus-proxy
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: prometheus-multi-tenant-proxy-config
      securityContext:
        fsGroup: 65534
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-multi-tenant-proxy
  namespace: monitoring
  labels:
    app: prometheus-multi-tenant-proxy
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: prometheus-multi-tenant-proxy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-multi-tenant-proxy
  namespace: monitoring
  labels:
    app: prometheus-multi-tenant-proxy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-multi-tenant-proxy
  labels:
    app: prometheus-multi-tenant-proxy
rules:
- apiGroups: [""]
  resources: ["services", "pods", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["observability.ethos.io"]
  resources: ["metricaccesses"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-multi-tenant-proxy
  labels:
    app: prometheus-multi-tenant-proxy
subjects:
- kind: ServiceAccount
  name: prometheus-multi-tenant-proxy
  namespace: monitoring
roleRef:
  kind: ClusterRole
  name: prometheus-multi-tenant-proxy
  apiGroup: rbac.authorization.k8s.io 